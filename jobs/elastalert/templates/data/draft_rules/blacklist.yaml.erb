<% if_p("elastalert.rules.blacklist.index") do |blacklist| %>

# The blacklist rule will check a certain field against a blacklist, and match if it is in the blacklist

# (Required)
# Rule name, must be unique
name: <%= p("elastalert.rules.blacklist.name") %>

# (Required)
# Type of alert
type: blacklist

# (Required)
# Index to search, wildcard supported
index: <%= p("elastalert.rules.blacklist.index") %>

# (Required, blacklist specific)
# The field to compare to the blacklist
compare_key: <%= p("elastalert.rules.blacklist.compare_key") %>

# (Required, blacklist specific)
# List of blacklisted values
blacklist: <% p("elastalert.rules.blacklist.values").each do |value| %>
- <%= value %> <% end %>

# (Required)
# List of elasticsearch filters used to find events
# These filters are joined with AND and nested in a filtered query
# For more info: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html
filter:
- <%= p("elastalert.rules.blacklist.filter.operator.value") %>: <% if_p("elastalert.rules.blacklist.filter.operator.terms") do |terms| %> <% p("elastalert.rules.blacklist.filter.operator.terms").each do |term| %>
  - term:
      <%= term %> <% end %> <% end %> <% if_p("elastalert.rules.blacklist.filter.operator.range") do |ranges| %> <% p("elastalert.rules.blacklist.filter.operator.range", []).each do |range| %>
  - range:
       <%= range['field'] %>:
        from: <%= range['from'] %>
        to: <%= range['to'] %> <% end %> <% end %> <% if_p("elastalert.rules.blacklist.filter.operator.query_string") do |queries| %> <% p("elastalert.rules.blacklist.filter.operator.query_string").each do |query_string| %>
  - query:
      query_string:
        query: "<%= query_string %>" <% end %> <% end %>

# (Required)
# The alert is used when a match is found
alert: <% p("elastalert.rules.blacklist.alert").each do |alert| %>
- "<%= alert %>" <% end %>

smtp_host: <%= p("elastalert.smtp_host") %>
smtp_port: <%= p("elastalert.smtp_port") %>
smtp_ssl: <%= p("elastalert.smtp_ssl") %> <% if_p("elastalert.smtp_user") do |smtp| %>
smtp_auth_file: /var/vcap/jobs/elastalert/config/auth.yml <% end %>
from_addr: <%= p("elastalert.from_addr") %>

# (Required, email specific)
# List of email addresses to send alerts to
email: <% p('elastalert.rules.blacklist.email').each do |email| %>
- <%= email %> <% end %>

<% end %>

